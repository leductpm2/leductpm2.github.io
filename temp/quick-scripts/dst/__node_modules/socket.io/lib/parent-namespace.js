
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/socket.io/lib/parent-namespace.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd1fadVZ58tHsrMLfBbx1PnE', 'parent-namespace');
// socketIOServer/node_modules/socket.io/lib/parent-namespace.js

'use strict';

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Namespace = require('./namespace');

var count = 0;

var ParentNamespace = /*#__PURE__*/function (_Namespace) {
  _inherits(ParentNamespace, _Namespace);

  var _super = _createSuper(ParentNamespace);

  function ParentNamespace(server) {
    var _this;

    _classCallCheck(this, ParentNamespace);

    _this = _super.call(this, server, '/_' + count++);
    _this.children = new Set();
    return _this;
  }

  _createClass(ParentNamespace, [{
    key: "initAdapter",
    value: function initAdapter() {}
  }, {
    key: "emit",
    value: function emit() {
      var _this2 = this;

      var args = Array.prototype.slice.call(arguments);
      this.children.forEach(function (nsp) {
        nsp.rooms = _this2.rooms;
        nsp.flags = _this2.flags;
        nsp.emit.apply(nsp, args);
      });
      this.rooms = [];
      this.flags = {};
    }
  }, {
    key: "createChild",
    value: function createChild(name) {
      var namespace = new Namespace(this.server, name);
      namespace.fns = this.fns.slice(0);
      this.listeners('connect').forEach(function (listener) {
        return namespace.on('connect', listener);
      });
      this.listeners('connection').forEach(function (listener) {
        return namespace.on('connection', listener);
      });
      this.children.add(namespace);
      this.server.nsps[name] = namespace;
      return namespace;
    }
  }]);

  return ParentNamespace;
}(Namespace);

module.exports = ParentNamespace;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();